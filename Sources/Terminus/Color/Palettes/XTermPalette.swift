import Foundation

public struct XTermPalette: ColorPalette {
    public let Black = Color(r: 0, g: 0, b: 0)
    public let Maroon = Color(r: 128, g: 0, b: 0)
    public let Green5 = Color(r: 0, g: 128, b: 0)
    public let Olive = Color(r: 128, g: 128, b: 0)
    public let Navy = Color(r: 0, g: 0, b: 128)
    public let Purple5 = Color(r: 128, g: 0, b: 128)
    public let Teal = Color(r: 0, g: 128, b: 128)
    public let Silver = Color(r: 192, g: 192, b: 192)
    public let Grey = Color(r: 128, g: 128, b: 128)
    public let Red4 = Color(r: 255, g: 0, b: 0)
    public let Lime = Color(r: 0, g: 255, b: 0)
    public let Yellow7 = Color(r: 255, g: 255, b: 0)
    public let Blue4 = Color(r: 0, g: 0, b: 255)
    public let Fuchsia = Color(r: 255, g: 0, b: 255)
    public let Aqua = Color(r: 0, g: 255, b: 255)
    public let White = Color(r: 255, g: 255, b: 255)
    public let Grey0 = Color(r: 0, g: 0, b: 0)
    public let NavyBlue = Color(r: 0, g: 0, b: 95)
    public let DarkBlue = Color(r: 0, g: 0, b: 135)
    public let Blue3 = Color(r: 0, g: 0, b: 175)
    public let Blue2 = Color(r: 0, g: 0, b: 215)
    public let Blue1 = Color(r: 0, g: 0, b: 255)
    public let DarkGreen = Color(r: 0, g: 95, b: 0)
    public let DeepSkyBlue7 = Color(r: 0, g: 95, b: 95)
    public let DeepSkyBlue6 = Color(r: 0, g: 95, b: 135)
    public let DeepSkyBlue5 = Color(r: 0, g: 95, b: 175)
    public let DodgerBlue3 = Color(r: 0, g: 95, b: 215)
    public let DodgerBlue2 = Color(r: 0, g: 95, b: 255)
    public let Green4 = Color(r: 0, g: 135, b: 0)
    public let SpringGreen6 = Color(r: 0, g: 135, b: 95)
    public let Turquoise3 = Color(r: 0, g: 135, b: 135)
    public let DeepSkyBlue4 = Color(r: 0, g: 135, b: 175)
    public let DeepSkyBlue3 = Color(r: 0, g: 135, b: 215)
    public let DodgerBlue1 = Color(r: 0, g: 135, b: 255)
    public let Green3 = Color(r: 0, g: 175, b: 0)
    public let SpringGreen5 = Color(r: 0, g: 175, b: 95)
    public let DarkCyan = Color(r: 0, g: 175, b: 135)
    public let LightSeaGreen = Color(r: 0, g: 175, b: 175)
    public let DeepSkyBlue2 = Color(r: 0, g: 175, b: 215)
    public let DeepSkyBlue1 = Color(r: 0, g: 175, b: 255)
    public let Green2 = Color(r: 0, g: 215, b: 0)
    public let SpringGreen4 = Color(r: 0, g: 215, b: 95)
    public let SpringGreen3 = Color(r: 0, g: 215, b: 135)
    public let Cyan3 = Color(r: 0, g: 215, b: 175)
    public let DarkTurquoise = Color(r: 0, g: 215, b: 215)
    public let Turquoise2 = Color(r: 0, g: 215, b: 255)
    public let Green1 = Color(r: 0, g: 255, b: 0)
    public let SpringGreen2 = Color(r: 0, g: 255, b: 95)
    public let SpringGreen1 = Color(r: 0, g: 255, b: 135)
    public let MediumSpringGreen = Color(r: 0, g: 255, b: 175)
    public let Cyan2 = Color(r: 0, g: 255, b: 215)
    public let Cyan1 = Color(r: 0, g: 255, b: 255)
    public let DarkRed1 = Color(r: 95, g: 0, b: 0)
    public let DeepPink8 = Color(r: 95, g: 0, b: 95)
    public let Purple4 = Color(r: 95, g: 0, b: 135)
    public let Purple3 = Color(r: 95, g: 0, b: 175)
    public let Purple2 = Color(r: 95, g: 0, b: 215)
    public let BlueViolet = Color(r: 95, g: 0, b: 255)
    public let Orange4 = Color(r: 95, g: 95, b: 0)
    public let Grey37 = Color(r: 95, g: 95, b: 95)
    public let MediumPurple7 = Color(r: 95, g: 95, b: 135)
    public let SlateBlue3 = Color(r: 95, g: 95, b: 175)
    public let SlateBlue2 = Color(r: 95, g: 95, b: 215)
    public let RoyalBlue1 = Color(r: 95, g: 95, b: 255)
    public let Chartreuse6 = Color(r: 95, g: 135, b: 0)
    public let DarkSeaGreen9 = Color(r: 95, g: 135, b: 95)
    public let PaleTurquoise2 = Color(r: 95, g: 135, b: 135)
    public let SteelBlue4 = Color(r: 95, g: 135, b: 175)
    public let SteelBlue3 = Color(r: 95, g: 135, b: 215)
    public let CornflowerBlue = Color(r: 95, g: 135, b: 255)
    public let Chartreuse5 = Color(r: 95, g: 175, b: 0)
    public let DarkSeaGreen8 = Color(r: 95, g: 175, b: 95)
    public let CadetBlue1 = Color(r: 95, g: 175, b: 135)
    public let CadetBlue = Color(r: 95, g: 175, b: 175)
    public let SkyBlue3 = Color(r: 95, g: 175, b: 215)
    public let SteelBlue2 = Color(r: 95, g: 175, b: 255)
    public let Chartreuse4 = Color(r: 95, g: 215, b: 0)
    public let PaleGreen4 = Color(r: 95, g: 215, b: 95)
    public let SeaGreen4 = Color(r: 95, g: 215, b: 135)
    public let Aquamarine3 = Color(r: 95, g: 215, b: 175)
    public let MediumTurquoise = Color(r: 95, g: 215, b: 215)
    public let SteelBlue1 = Color(r: 95, g: 215, b: 255)
    public let Chartreuse3 = Color(r: 95, g: 255, b: 0)
    public let SeaGreen3 = Color(r: 95, g: 255, b: 95)
    public let SeaGreen2 = Color(r: 95, g: 255, b: 135)
    public let SeaGreen1 = Color(r: 95, g: 255, b: 175)
    public let Aquamarine2 = Color(r: 95, g: 255, b: 215)
    public let DarkSlateGray3 = Color(r: 95, g: 255, b: 255)
    public let DarkRed = Color(r: 135, g: 0, b: 0)
    public let DeepPink7 = Color(r: 135, g: 0, b: 95)
    public let DarkMagenta1 = Color(r: 135, g: 0, b: 135)
    public let DarkMagenta = Color(r: 135, g: 0, b: 175)
    public let DarkViolet1 = Color(r: 135, g: 0, b: 215)
    public let Purple1 = Color(r: 135, g: 0, b: 255)
    public let Orange3 = Color(r: 135, g: 95, b: 0)
    public let LightPink3 = Color(r: 135, g: 95, b: 95)
    public let Plum4 = Color(r: 135, g: 95, b: 135)
    public let MediumPurple6 = Color(r: 135, g: 95, b: 175)
    public let MediumPurple5 = Color(r: 135, g: 95, b: 215)
    public let SlateBlue1 = Color(r: 135, g: 95, b: 255)
    public let Yellow6 = Color(r: 135, g: 135, b: 0)
    public let Wheat2 = Color(r: 135, g: 135, b: 95)
    public let Grey53 = Color(r: 135, g: 135, b: 135)
    public let LightSlateGrey = Color(r: 135, g: 135, b: 175)
    public let MediumPurple4 = Color(r: 135, g: 135, b: 215)
    public let LightSlateBlue = Color(r: 135, g: 135, b: 255)
    public let Yellow5 = Color(r: 135, g: 175, b: 0)
    public let DarkOliveGreen6 = Color(r: 135, g: 175, b: 95)
    public let DarkSeaGreen7 = Color(r: 135, g: 175, b: 135)
    public let LightSkyBlue3 = Color(r: 135, g: 175, b: 175)
    public let LightSkyBlue2 = Color(r: 135, g: 175, b: 215)
    public let SkyBlue2 = Color(r: 135, g: 175, b: 255)
    public let Chartreuse2 = Color(r: 135, g: 215, b: 0)
    public let DarkOliveGreen5 = Color(r: 135, g: 215, b: 95)
    public let PaleGreen3 = Color(r: 135, g: 215, b: 135)
    public let DarkSeaGreen6 = Color(r: 135, g: 215, b: 175)
    public let DarkSlateGray2 = Color(r: 135, g: 215, b: 215)
    public let SkyBlue1 = Color(r: 135, g: 215, b: 255)
    public let Chartreuse1 = Color(r: 135, g: 255, b: 0)
    public let LightGreen1 = Color(r: 135, g: 255, b: 95)
    public let LightGreen = Color(r: 135, g: 255, b: 135)
    public let PaleGreen2 = Color(r: 135, g: 255, b: 175)
    public let Aquamarine1 = Color(r: 135, g: 255, b: 215)
    public let DarkSlateGray1 = Color(r: 135, g: 255, b: 255)
    public let Red3 = Color(r: 175, g: 0, b: 0)
    public let DeepPink6 = Color(r: 175, g: 0, b: 95)
    public let MediumVioletRed = Color(r: 175, g: 0, b: 135)
    public let Magenta6 = Color(r: 175, g: 0, b: 175)
    public let DarkViolet = Color(r: 175, g: 0, b: 215)
    public let Purple = Color(r: 175, g: 0, b: 255)
    public let DarkOrange2 = Color(r: 175, g: 95, b: 0)
    public let IndianRed4 = Color(r: 175, g: 95, b: 95)
    public let HotPink4 = Color(r: 175, g: 95, b: 135)
    public let MediumOrchid4 = Color(r: 175, g: 95, b: 175)
    public let MediumOrchid3 = Color(r: 175, g: 95, b: 215)
    public let MediumPurple3 = Color(r: 175, g: 95, b: 255)
    public let DarkGoldenrod = Color(r: 175, g: 135, b: 0)
    public let LightSalmon3 = Color(r: 175, g: 135, b: 95)
    public let RosyBrown = Color(r: 175, g: 135, b: 135)
    public let Grey63 = Color(r: 175, g: 135, b: 175)
    public let MediumPurple2 = Color(r: 175, g: 135, b: 215)
    public let MediumPurple1 = Color(r: 175, g: 135, b: 255)
    public let Gold3 = Color(r: 175, g: 175, b: 0)
    public let DarkKhaki = Color(r: 175, g: 175, b: 95)
    public let NavajoWhite2 = Color(r: 175, g: 175, b: 135)
    public let Grey69 = Color(r: 175, g: 175, b: 175)
    public let LightSteelBlue3 = Color(r: 175, g: 175, b: 215)
    public let LightSteelBlue2 = Color(r: 175, g: 175, b: 255)
    public let Yellow4 = Color(r: 175, g: 215, b: 0)
    public let DarkOliveGreen4 = Color(r: 175, g: 215, b: 95)
    public let DarkSeaGreen5 = Color(r: 175, g: 215, b: 135)
    public let DarkSeaGreen4 = Color(r: 175, g: 215, b: 175)
    public let LightCyan2 = Color(r: 175, g: 215, b: 215)
    public let LightSkyBlue1 = Color(r: 175, g: 215, b: 255)
    public let GreenYellow = Color(r: 175, g: 255, b: 0)
    public let DarkOliveGreen3 = Color(r: 175, g: 255, b: 95)
    public let PaleGreen1 = Color(r: 175, g: 255, b: 135)
    public let DarkSeaGreen3 = Color(r: 175, g: 255, b: 175)
    public let DarkSeaGreen2 = Color(r: 175, g: 255, b: 215)
    public let PaleTurquoise1 = Color(r: 175, g: 255, b: 255)
    public let Red2 = Color(r: 215, g: 0, b: 0)
    public let DeepPink5 = Color(r: 215, g: 0, b: 95)
    public let DeepPink4 = Color(r: 215, g: 0, b: 135)
    public let Magenta5 = Color(r: 215, g: 0, b: 175)
    public let Magenta4 = Color(r: 215, g: 0, b: 215)
    public let Magenta3 = Color(r: 215, g: 0, b: 255)
    public let DarkOrange1 = Color(r: 215, g: 95, b: 0)
    public let IndianRed3 = Color(r: 215, g: 95, b: 95)
    public let HotPink3 = Color(r: 215, g: 95, b: 135)
    public let HotPink2 = Color(r: 215, g: 95, b: 175)
    public let Orchid3 = Color(r: 215, g: 95, b: 215)
    public let MediumOrchid2 = Color(r: 215, g: 95, b: 255)
    public let Orange2 = Color(r: 215, g: 135, b: 0)
    public let LightSalmon2 = Color(r: 215, g: 135, b: 95)
    public let LightPink2 = Color(r: 215, g: 135, b: 135)
    public let Pink2 = Color(r: 215, g: 135, b: 175)
    public let Plum3 = Color(r: 215, g: 135, b: 215)
    public let Violet = Color(r: 215, g: 135, b: 255)
    public let Gold2 = Color(r: 215, g: 175, b: 0)
    public let LightGoldenrod5 = Color(r: 215, g: 175, b: 95)
    public let Tan = Color(r: 215, g: 175, b: 135)
    public let MistyRose2 = Color(r: 215, g: 175, b: 175)
    public let Thistle2 = Color(r: 215, g: 175, b: 215)
    public let Plum2 = Color(r: 215, g: 175, b: 255)
    public let Yellow3 = Color(r: 215, g: 215, b: 0)
    public let Khaki2 = Color(r: 215, g: 215, b: 95)
    public let LightGoldenrod4 = Color(r: 215, g: 215, b: 135)
    public let LightYellow3 = Color(r: 215, g: 215, b: 175)
    public let Grey84 = Color(r: 215, g: 215, b: 215)
    public let LightSteelBlue1 = Color(r: 215, g: 215, b: 255)
    public let Yellow2 = Color(r: 215, g: 255, b: 0)
    public let DarkOliveGreen2 = Color(r: 215, g: 255, b: 95)
    public let DarkOliveGreen1 = Color(r: 215, g: 255, b: 135)
    public let DarkSeaGreen1 = Color(r: 215, g: 255, b: 175)
    public let Honeydew2 = Color(r: 215, g: 255, b: 215)
    public let LightCyan1 = Color(r: 215, g: 255, b: 255)
    public let Red1 = Color(r: 255, g: 0, b: 0)
    public let DeepPink3 = Color(r: 255, g: 0, b: 95)
    public let DeepPink2 = Color(r: 255, g: 0, b: 135)
    public let DeepPink1 = Color(r: 255, g: 0, b: 175)
    public let Magenta2 = Color(r: 255, g: 0, b: 215)
    public let Magenta1 = Color(r: 255, g: 0, b: 255)
    public let OrangeRed1 = Color(r: 255, g: 95, b: 0)
    public let IndianRed2 = Color(r: 255, g: 95, b: 95)
    public let IndianRed1 = Color(r: 255, g: 95, b: 135)
    public let HotPink1 = Color(r: 255, g: 95, b: 175)
    public let HotPink = Color(r: 255, g: 95, b: 215)
    public let MediumOrchid1 = Color(r: 255, g: 95, b: 255)
    public let DarkOrange = Color(r: 255, g: 135, b: 0)
    public let Salmon1 = Color(r: 255, g: 135, b: 95)
    public let LightCoral = Color(r: 255, g: 135, b: 135)
    public let PaleVioletRed1 = Color(r: 255, g: 135, b: 175)
    public let Orchid2 = Color(r: 255, g: 135, b: 215)
    public let Orchid1 = Color(r: 255, g: 135, b: 255)
    public let Orange1 = Color(r: 255, g: 175, b: 0)
    public let SandyBrown = Color(r: 255, g: 175, b: 95)
    public let LightSalmon1 = Color(r: 255, g: 175, b: 135)
    public let LightPink1 = Color(r: 255, g: 175, b: 175)
    public let Pink1 = Color(r: 255, g: 175, b: 215)
    public let Plum1 = Color(r: 255, g: 175, b: 255)
    public let Gold1 = Color(r: 255, g: 215, b: 0)
    public let LightGoldenrod3 = Color(r: 255, g: 215, b: 95)
    public let LightGoldenrod2 = Color(r: 255, g: 215, b: 135)
    public let NavajoWhite1 = Color(r: 255, g: 215, b: 175)
    public let MistyRose1 = Color(r: 255, g: 215, b: 215)
    public let Thistle1 = Color(r: 255, g: 215, b: 255)
    public let Yellow1 = Color(r: 255, g: 255, b: 0)
    public let LightGoldenrod1 = Color(r: 255, g: 255, b: 95)
    public let Khaki1 = Color(r: 255, g: 255, b: 135)
    public let Wheat1 = Color(r: 255, g: 255, b: 175)
    public let Cornsilk1 = Color(r: 255, g: 255, b: 215)
    public let Grey100 = Color(r: 255, g: 255, b: 255)
    public let Grey3 = Color(r: 8, g: 8, b: 8)
    public let Grey7 = Color(r: 18, g: 18, b: 18)
    public let Grey11 = Color(r: 28, g: 28, b: 28)
    public let Grey15 = Color(r: 38, g: 38, b: 38)
    public let Grey19 = Color(r: 48, g: 48, b: 48)
    public let Grey23 = Color(r: 58, g: 58, b: 58)
    public let Grey27 = Color(r: 68, g: 68, b: 68)
    public let Grey30 = Color(r: 78, g: 78, b: 78)
    public let Grey35 = Color(r: 88, g: 88, b: 88)
    public let Grey39 = Color(r: 98, g: 98, b: 98)
    public let Grey42 = Color(r: 108, g: 108, b: 108)
    public let Grey46 = Color(r: 118, g: 118, b: 118)
    public let Grey50 = Color(r: 128, g: 128, b: 128)
    public let Grey54 = Color(r: 138, g: 138, b: 138)
    public let Grey58 = Color(r: 148, g: 148, b: 148)
    public let Grey62 = Color(r: 158, g: 158, b: 158)
    public let Grey66 = Color(r: 168, g: 168, b: 168)
    public let Grey70 = Color(r: 178, g: 178, b: 178)
    public let Grey74 = Color(r: 188, g: 188, b: 188)
    public let Grey78 = Color(r: 198, g: 198, b: 198)
    public let Grey82 = Color(r: 208, g: 208, b: 208)
    public let Grey85 = Color(r: 218, g: 218, b: 218)
    public let Grey89 = Color(r: 228, g: 228, b: 228)
    public let Grey93 = Color(r: 238, g: 238, b: 238)

    public init() {}

    public func allColors() -> [Color]  {
        var colors: [Color] = []
        let mirror = Mirror(reflecting: self)
        for child in mirror.children {
            if let color = child.value as? Color {
                colors.append(color)
            }
        }
        return colors
    }

    public func defaultPair() -> ColorPair {
        return ColorPair(foreground: XTermPalette().White, background: XTermPalette().Black)
    }
}
