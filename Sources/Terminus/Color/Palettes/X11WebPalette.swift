import Foundation

/**
 The X11WebPallet contains 256 color names originally designed for the world wide web.  See the [Wikipedia page](https://en.wikipedia.org/wiki/Web_colors) for more info.
 */
public struct X11WebPalette: ColorPalette {
    public let MediumVioletRed = Color(r: 199, g: 21, b: 133)
    public let DeepPink = Color(r: 255, g: 20, b: 147)
    public let PaleVioletRed = Color(r: 219, g: 112, b: 147)
    public let HotPink = Color(r: 255, g: 105, b: 180)
    public let LightPink = Color(r: 255, g: 182, b: 193)
    public let Pink = Color(r: 255, g: 192, b: 203)
    public let DarkRed = Color(r: 139, g: 0, b: 0)
    public let Red = Color(r: 255, g: 0, b: 0)
    public let Firebrick = Color(r: 178, g: 34, b: 34)
    public let Crimson = Color(r: 220, g: 20, b: 60)
    public let IndianRed = Color(r: 205, g: 92, b: 92)
    public let LightCoral = Color(r: 240, g: 128, b: 128)
    public let Salmon = Color(r: 250, g: 128, b: 114)
    public let DarkSalmon = Color(r: 233, g: 150, b: 122)
    public let LightSalmon = Color(r: 255, g: 160, b: 122)
    public let OrangeRed = Color(r: 255, g: 69, b: 0)
    public let Tomato = Color(r: 255, g: 99, b: 71)
    public let DarkOrange = Color(r: 255, g: 140, b: 0)
    public let Coral = Color(r: 255, g: 127, b: 80)
    public let Orange = Color(r: 255, g: 165, b: 0)
    public let DarkKhaki = Color(r: 189, g: 183, b: 107)
    public let Gold = Color(r: 255, g: 215, b: 0)
    public let Khaki = Color(r: 240, g: 230, b: 140)
    public let PeachPuff = Color(r: 255, g: 218, b: 185)
    public let Yellow = Color(r: 255, g: 255, b: 0)
    public let PaleGoldenrod = Color(r: 238, g: 232, b: 170)
    public let Moccasin = Color(r: 255, g: 228, b: 181)
    public let PapayaWhip = Color(r: 255, g: 239, b: 213)
    public let LightGoldenrodYellow = Color(r: 250, g: 250, b: 210)
    public let LemonChiffon = Color(r: 255, g: 250, b: 205)
    public let LightYellow = Color(r: 255, g: 255, b: 224)
    public let Maroon = Color(r: 128, g: 0, b: 0)
    public let Brown = Color(r: 165, g: 42, b: 42)
    public let SaddleBrown = Color(r: 139, g: 69, b: 19)
    public let Sienna = Color(r: 160, g: 82, b: 45)
    public let Chocolate = Color(r: 210, g: 105, b: 30)
    public let DarkGoldenrod = Color(r: 184, g: 134, b: 11)
    public let Peru = Color(r: 205, g: 133, b: 63)
    public let RosyBrown = Color(r: 188, g: 143, b: 143)
    public let Goldenrod = Color(r: 218, g: 165, b: 32)
    public let SandyBrown = Color(r: 244, g: 164, b: 96)
    public let Tan = Color(r: 210, g: 180, b: 140)
    public let Burlywood = Color(r: 222, g: 184, b: 135)
    public let Wheat = Color(r: 245, g: 222, b: 179)
    public let NavajoWhite = Color(r: 255, g: 222, b: 173)
    public let Bisque = Color(r: 255, g: 228, b: 196)
    public let BlanchedAlmond = Color(r: 255, g: 235, b: 205)
    public let Cornsilk = Color(r: 255, g: 248, b: 220)
    public let DarkGreen = Color(r: 0, g: 100, b: 0)
    public let Green = Color(r: 0, g: 128, b: 0)
    public let DarkOliveGreen = Color(r: 85, g: 107, b: 47)
    public let ForestGreen = Color(r: 34, g: 139, b: 34)
    public let SeaGreen = Color(r: 46, g: 139, b: 87)
    public let Olive = Color(r: 128, g: 128, b: 0)
    public let OliveDrab = Color(r: 107, g: 142, b: 35)
    public let MediumSeaGreen = Color(r: 60, g: 179, b: 113)
    public let LimeGreen = Color(r: 50, g: 205, b: 50)
    public let Lime = Color(r: 0, g: 255, b: 0)
    public let SpringGreen = Color(r: 0, g: 255, b: 127)
    public let MediumSpringGreen = Color(r: 0, g: 250, b: 154)
    public let DarkSeaGreen = Color(r: 143, g: 188, b: 143)
    public let MediumAquamarine = Color(r: 102, g: 205, b: 170)
    public let YellowGreen = Color(r: 154, g: 205, b: 50)
    public let LawnGreen = Color(r: 124, g: 252, b: 0)
    public let Chartreuse = Color(r: 127, g: 255, b: 0)
    public let LightGreen = Color(r: 144, g: 238, b: 144)
    public let GreenYellow = Color(r: 173, g: 255, b: 47)
    public let PaleGreen = Color(r: 152, g: 251, b: 152)
    public let Teal = Color(r: 0, g: 128, b: 128)
    public let DarkCyan = Color(r: 0, g: 139, b: 139)
    public let LightSeaGreen = Color(r: 32, g: 178, b: 170)
    public let CadetBlue = Color(r: 95, g: 158, b: 160)
    public let DarkTurquoise = Color(r: 0, g: 206, b: 209)
    public let MediumTurquoise = Color(r: 72, g: 209, b: 204)
    public let Turquoise = Color(r: 64, g: 224, b: 208)
    public let Aqua = Color(r: 0, g: 255, b: 255)
    public let Cyan = Color(r: 0, g: 255, b: 255)
    public let Aquamarine = Color(r: 127, g: 255, b: 212)
    public let PaleTurquoise = Color(r: 175, g: 238, b: 238)
    public let LightCyan = Color(r: 224, g: 255, b: 255)
    public let Navy = Color(r: 0, g: 0, b: 128)
    public let DarkBlue = Color(r: 0, g: 0, b: 139)
    public let MediumBlue = Color(r: 0, g: 0, b: 205)
    public let Blue = Color(r: 0, g: 0, b: 255)
    public let MidnightBlue = Color(r: 25, g: 25, b: 112)
    public let RoyalBlue = Color(r: 65, g: 105, b: 225)
    public let SteelBlue = Color(r: 70, g: 130, b: 180)
    public let DodgerBlue = Color(r: 30, g: 144, b: 255)
    public let DeepSkyBlue = Color(r: 0, g: 191, b: 255)
    public let CornflowerBlue = Color(r: 100, g: 149, b: 237)
    public let SkyBlue = Color(r: 135, g: 206, b: 235)
    public let LightSkyBlue = Color(r: 135, g: 206, b: 250)
    public let LightSteelBlue = Color(r: 176, g: 196, b: 222)
    public let LightBlue = Color(r: 173, g: 216, b: 230)
    public let PowderBlue = Color(r: 176, g: 224, b: 230)
    public let Indigo = Color(r: 75, g: 0, b: 130)
    public let Purple = Color(r: 128, g: 0, b: 128)
    public let DarkMagenta = Color(r: 139, g: 0, b: 139)
    public let DarkViolet = Color(r: 148, g: 0, b: 211)
    public let DarkSlateBlue = Color(r: 72, g: 61, b: 139)
    public let BlueViolet = Color(r: 138, g: 43, b: 226)
    public let DarkOrchid = Color(r: 153, g: 50, b: 204)
    public let Fuchsia = Color(r: 255, g: 0, b: 255)
    public let Magenta = Color(r: 255, g: 0, b: 255)
    public let SlateBlue = Color(r: 106, g: 90, b: 205)
    public let MediumSlateBlue = Color(r: 123, g: 104, b: 238)
    public let MediumOrchid = Color(r: 186, g: 85, b: 211)
    public let MediumPurple = Color(r: 147, g: 112, b: 219)
    public let Orchid = Color(r: 218, g: 112, b: 214)
    public let Violet = Color(r: 238, g: 130, b: 238)
    public let Plum = Color(r: 221, g: 160, b: 221)
    public let Thistle = Color(r: 216, g: 191, b: 216)
    public let Lavender = Color(r: 230, g: 230, b: 250)
    public let MistyRose = Color(r: 255, g: 228, b: 225)
    public let AntiqueWhite = Color(r: 250, g: 235, b: 215)
    public let Linen = Color(r: 250, g: 240, b: 230)
    public let Beige = Color(r: 245, g: 245, b: 220)
    public let WhiteSmoke = Color(r: 245, g: 245, b: 245)
    public let LavenderBlush = Color(r: 255, g: 240, b: 245)
    public let OldLace = Color(r: 253, g: 245, b: 230)
    public let AliceBlue = Color(r: 240, g: 248, b: 255)
    public let Seashell = Color(r: 255, g: 245, b: 238)
    public let GhostWhite = Color(r: 248, g: 248, b: 255)
    public let Honeydew = Color(r: 240, g: 255, b: 240)
    public let FloralWhite = Color(r: 255, g: 250, b: 240)
    public let Azure = Color(r: 240, g: 255, b: 255)
    public let MintCream = Color(r: 245, g: 255, b: 250)
    public let Snow = Color(r: 255, g: 250, b: 250)
    public let Ivory = Color(r: 255, g: 255, b: 240)
    public let White = Color(r: 255, g: 255, b: 255)
    public let Black = Color(r: 0, g: 0, b: 0)
    public let DarkSlateGray = Color(r: 47, g: 79, b: 79)
    public let DimGray = Color(r: 105, g: 105, b: 105)
    public let SlateGray = Color(r: 112, g: 128, b: 144)
    public let Gray = Color(r: 128, g: 128, b: 128)
    public let LightSlateGray = Color(r: 119, g: 136, b: 153)
    public let DarkGray = Color(r: 169, g: 169, b: 169)
    public let Silver = Color(r: 192, g: 192, b: 192)
    public let LightGray = Color(r: 211, g: 211, b: 211)
    public let Gainsboro = Color(r: 220, g: 220, b: 220)

    public init() {}

    public func allColors() -> [(name: String, color: Color)]  {
        var colors: [(String, Color)] = []
        let mirror = Mirror(reflecting: self)
        for child in mirror.children {
            if let color = child.value as? Color,
               let name = child.label {
                colors.append((name, color))
            }
        }
        return colors
    }

    public func defaultPair() -> ColorPair {
        return ColorPair(foreground: X11WebPalette().White, background: X11WebPalette().Black)
    }
}
